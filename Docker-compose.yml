services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      PGUSER: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  next:
    build:
      context: ./next-app
      dockerfile: Dockerfile
    env_file:
      - ./next-app/.env
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres?schema=public
    develop:
      watch:
        - path: ./next-app/package.json
          action: rebuild
        - path: ./next-app/next.config.mjs
          action: rebuild
        - path: ./next-app/package-lock.json
          action: rebuild
        - path: ./next-app
          target: /app
          action: sync

  upload-service:
    build:
      context: ./upload-image-service
      dockerfile: Dockerfile
    env_file:
      - ./upload-image-service/.env
    ports:
      - 8000:8000
    develop:
      watch:
        - path: ./upload-image-service/requirement.txt
          action: rebuild
        - path: ./upload-image-service
          target: /app
          action: sync
          ignore:
            - uploads/images
    volumes:
      - ./upload-image-service/uploads/images:/app/uploads/images

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025" # Port SMTP
      - "8025:8025" # Interface Web

